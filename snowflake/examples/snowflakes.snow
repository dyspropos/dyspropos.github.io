system snowflake using svg {

  sy snowflake(size: float, fill: color, tf: pose2f)
  sy snowflakes(size: float, fill: color, tf: pose2f, n: int)

  start {
    snowflakes(50.0, #aaaaff, identity_pose(), 10 )
  }

  rule snowflakes if n > 0 {
    fill => hue( urange(0.0, 0.05) )
    snowflake(size, fill, tf)

    let R = identity_pose() -> rotate( urange(0, 360) )
    tf = pose_mul(tf, R)

    tf => translate( 2*urange(-size, size), 2*urange(-size, size) )
    snowflakes(size, fill, tf, n - 1)
  }

  rule snowflake {
    forward(size)
    turn(240.0)
    forward(size)
    turn(240.0)
    forward(size)
    path( style(1.0, #000000, fill), tf )
  }

  rule forward if length > 5.0 {
    let d = length / 3.0
    forward(d)
    turn(60)
    forward(d)
    turn(-120)
    forward(d)
    turn(60)
    forward(d)
  }

}